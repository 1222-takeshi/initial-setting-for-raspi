#!/usr/sbin/nft -f

flush ruleset

table inet filter {
  chain input {
    type filter hook input priority 0; policy drop;                           # input default policy drop
      iifname "lo" accept                                                     # local loopback accept
      iifname "LIVOX_NIC_name" accept                                         # LIVOX LiDAR accept (192.168.0)
      iifname "V2X_NIC_name" accept                                           # V2X accept (192.168.5)
      iifname "VELODYNE_NIC_name" accept                                      # Velodyne LiDAR accept (192.168.1)
      iifname "LTE_Router_NIC_name" ct state { established, related } accept  # LTE Router established/related accept
  }
  chain forward {
    type filter hook forward priority 0;
  }
  chain output {
    type filter hook output priority 0; policy drop;                          # output default policy drop
      oifname "lo" accept                                                     # local loopback accept
      oifname "LIVOX_NIC_name" accept                                         # LIVOX LiDAR accept
      oifname "V2X_NIC_name" accept                                           # V2X accept
      oifname "VELODYNE_NIC_name" accept                                      # Velodyne LiDAR accept
      oifname "LTE_Router_NIC_name" udp dport 53 accept                       # LTE Router DNS accept
      oifname "LTE_Router_NIC_name" udp dport 67 accept                       # DHCP (LTE Router) accept
      oifname "LTE_Router_NIC_name" udp dport 123 accept                      # NTP accept
      oifname "LTE_Router_NIC_name" tcp dport 443 accept                      # HTTPS (FMS REST API, Capybara Call API, OTA) accept
      oifname "LTE_Router_NIC_name" tcp dport 8443 accept                     # HTTPS (FMS REST API, Capybara Call API) accept
      oifname "LTE_Router_NIC_name" tcp dport 8883 accept                     # MQTT (FMS data sharing) accept
      oifname "LTE_Router_NIC_name" udp dport 5353 accept                     # mDNS accept
      oifname "LTE_Router_NIC_name" udp dport 32400 accept                    # RTPS accept
      oifname "LTE_Router_NIC_name" udp dport 32415 accept                    # Data accept
  }
}
